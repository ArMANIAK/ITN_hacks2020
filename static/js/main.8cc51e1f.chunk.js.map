{"version":3,"sources":["assets/BazaIT.svg","components/Profile/Profile.js","components/Quiz/Quiz.js","components/Task/Task.js","components/Tester/Tester.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","useState","capture","data","axisX","axisY","stats","setStats","vacancies","geography","averageSalary","activeUsers","className","onClick","type","name","id","placeholder","disabled","style","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","fill","Quiz","tests","testCases","question","setQuestion","length","for","value","answers","Task","href","alert","Tester","group","rightAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","mixArray","arr","newArr","slice","i","temp","randomIndex","Math","floor","random","reduce","acc","el","push","topic","testInProgress","setTestInProgress","App","title","src","require","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8cc51e1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BazaIT.304e5212.svg\";","import React, { useState } from 'react';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n} from 'recharts';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n\r\n    const [stats, setStats] = useState({\r\n        capture: \"Нових вакансій\",\r\n        data: [\r\n            { axisX: '2020-09-15', axisY: 35 },\r\n            { axisX: '2020-09-18', axisY: 5 },\r\n            { axisX: '2020-09-19', axisY: 15 },\r\n            { axisX: '2020-09-21', axisY: 15 },\r\n            { axisX: '2020-09-22', axisY: 25 },\r\n            { axisX: '2020-09-23', axisY: 5 },\r\n            { axisX: '2020-09-25', axisY: 35 },\r\n            { axisX: '2020-10-15', axisY: 0 },\r\n            { axisX: '2020-10-25', axisY: 10 },\r\n        ]})\r\n\r\n  // stats is a mock-up for real data which is fetched from API or DB and might be initialized within backend code\r\n\r\n  const vacancies = {\r\n    capture: \"Нових вакансій\",\r\n    data: [\r\n            { axisX: '2020-09-15', axisY: 35 },\r\n            { axisX: '2020-09-18', axisY: 5 },\r\n            { axisX: '2020-09-19', axisY: 15 },\r\n            { axisX: '2020-09-21', axisY: 15 },\r\n            { axisX: '2020-09-22', axisY: 25 },\r\n            { axisX: '2020-09-23', axisY: 5 },\r\n            { axisX: '2020-09-25', axisY: 35 },\r\n            { axisX: '2020-10-15', axisY: 0 },\r\n            { axisX: '2020-10-25', axisY: 10 },\r\n        ]};\r\n\r\n    const geography = {\r\n        capture: \"Географія вакансій\",\r\n        data: [\r\n            { axisX: 'Lutsk', axisY: 10 },\r\n            { axisX: 'Dnipro', axisY: 35 },\r\n            { axisX: 'Lviv', axisY: 44 },\r\n            { axisX: 'Kyiv', axisY: 54 },\r\n            { axisX: 'Kharkiv', axisY: 30 },\r\n            { axisX: 'Chernihiv', axisY: 15 },\r\n            { axisX: 'Zaporizhia', axisY: 11 },\r\n        ]};\r\n\r\n    const averageSalary = {\r\n        capture: \"Сeредня заробітна плата\",\r\n        data: [\r\n            {axisX: '2020-01', axisY: 15000 },\r\n            {axisX: '2020-02', axisY: 14200 },\r\n            {axisX: '2020-03', axisY: 12000 },\r\n            {axisX: '2020-04', axisY: 13000 },\r\n            {axisX: '2020-05', axisY: 14000 },\r\n            {axisX: '2020-06', axisY: 15000 },\r\n            {axisX: '2020-07', axisY: 15000 },\r\n            {axisX: '2020-08', axisY: 17000 },\r\n            {axisX: '2020-09', axisY: 19000 },\r\n        ]};\r\n\r\n    const activeUsers = {\r\n        capture: \"Активних користувачів\",\r\n        data: [\r\n            { axisX: '2020-09-15', axisY: 25 },\r\n            { axisX: '2020-09-18', axisY: 17 },\r\n            { axisX: '2020-09-19', axisY: 23 },\r\n            { axisX: '2020-09-21', axisY: 20 },\r\n            { axisX: '2020-09-22', axisY: 8 },\r\n            { axisX: '2020-09-23', axisY: 22 },\r\n            { axisX: '2020-09-25', axisY: 24 },\r\n            { axisX: '2020-10-15', axisY: 15 },\r\n            { axisX: '2020-10-25', axisY: 27 },\r\n        ]};\r\n  \r\n    return (\r\n        <div className=\"profile\">\r\n            <section className=\"section\">\r\n                <h2 className=\"section-title\">Аналітика</h2>\r\n                <nav className=\"section-nav\">\r\n                    <ul>\r\n                        <li className=\"section-nav-text\">Платформа</li>\r\n                        <li className=\"section-nav-text\">Профіль</li>\r\n                        <li className=\"section-nav-text\">Компанія</li>\r\n                    </ul>\r\n                </nav>\r\n                <main className=\"container\">\r\n                    <nav className=\"aside\">\r\n                        <ul className=\"aside-ul\">\r\n                            <li className=\"aside-li\">\r\n                                <button className=\"aside-li-text\" onClick = {() => setStats(vacancies)}>Нових вакансій</button>\r\n                            </li>\r\n                            <li className=\"aside-li\">\r\n                                <button className=\"aside-li-text\" onClick = {() => setStats(geography)}>Географія вакансій</button>\r\n                            </li>\r\n                            <li className=\"aside-li\">\r\n                                <button className=\"aside-li-text\" onClick = {() => setStats(averageSalary)}>Сeредня заробітна плата</button>\r\n                            </li>\r\n                            <li className=\"aside-li\">\r\n                                <button className=\"aside-li-text\" onClick = {() => setStats(activeUsers)}>Активних користувачів</button>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <main className=\"section\">\r\n                        <nav className=\"section-nav\">\r\n                            <ul className=\"nav-profile\">\r\n                                <li className=\"nav-profile-item\">День</li>\r\n                                <li className=\"nav-profile-item\">Тиждень</li>\r\n                                <li className=\"nav-profile-item\">Місяць</li>\r\n                                <li className=\"nav-profile-item\">Рік</li>\r\n                            </ul>\r\n                            <input type=\"text\" name=\"text\" id=\"text\" placeholder=\"Введіть міста через кому\" disabled/>\r\n                            <input type=\"date\" name=\"date\" id=\"date\"/>\r\n                        </nav>\r\n                        <div className=\"graphic\">\r\n                        <div style={{ width: '100%', height: '40vh' }}>\r\n                            <h3 className=\"graphic-header\">\r\n                                { stats.capture }\r\n                            </h3>\r\n                            <ResponsiveContainer>\r\n                                <AreaChart\r\n                                    data={stats.data}\r\n                                    margin={{\r\n                                    top: 30, right: 30, left: 0, bottom: 0,\r\n                                    }}\r\n                                >\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"axisX\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Area type=\"monotone\" dataKey=\"axisY\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n                                </AreaChart>\r\n                            </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </main>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect, useState} from 'react';\r\nimport './Quiz.css';\r\n\r\nconst Quiz = ({tests, testCases}) => {\r\n\r\n    const [question, setQuestion] = useState(0);\r\n\r\n    return (\r\n        <section className=\"section\">\r\n            <h3 className=\"section-title\">Підтвердження рівня знань</h3>\r\n            <div className=\"container-test\">\r\n\r\n                <div className=\"test-question\">\r\n                    <p className=\"question-title\">Питання: {question + 1}/{tests.length}</p>\r\n                    <div className=\"question-text\" id=\"question-text\">\r\n                        {tests[question].question}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"test-answer\">\r\n                    <p className=\"answer-title\">Варианты ответов:</p>\r\n                    \r\n                    <label className=\"answer-label\" for=\"answer\">\r\n                        <input className=\"answer-input\" type=\"radio\" name=\"answer\" id=\"\" value=\"\" />\r\n                        <span className=\"answer\">{tests[question].answers[0]}</span>\r\n                    </label>\r\n                    \r\n                    <label className=\"answer-label\" for=\"answer\">\r\n                        <input className=\"answer-input\" type=\"radio\" name=\"answer\" id=\"\" value=\"\" />\r\n                        <span className=\"answer\">{tests[question].answers[1]}</span>\r\n                    </label>\r\n                    \r\n                    <label className=\"answer-label\" for=\"answer\">\r\n                        <input className=\"answer-input\" type=\"radio\" name=\"answer\" id=\"\" value=\"\" />\r\n                        <span className=\"answer\">{tests[question].answers[2]}</span>\r\n                    </label>\r\n                    \r\n                    <label className=\"answer-label\" for=\"answer\">\r\n                        <input className=\"answer-input\" type=\"radio\" name=\"answer\" id=\"\" value=\"\" />\r\n                        <span className=\"answer\">{tests[question].answers[3]}</span>\r\n                    </label>\r\n\r\n                </div>\r\n            </div>\r\n            <footer className=\"footer\">\r\n                <div className=\"footer-partition-left\">\r\n                    <p className=\"footer-text\">Остаток времени: <span className=\"time\">5:00</span></p>\r\n                </div>\r\n                <div className=\"footer-partition-right\">\r\n                    <button className=\"btn-prev\" onClick={() => setQuestion((question + tests.length - 1) % tests.length)}><i className=\"fas fa-chevron-left\"></i> Попереднє питання</button>\r\n                    <button className=\"btn-next\" onClick={() => setQuestion((question + tests.length + 1) % tests.length)}>Наступне питання <i className=\"fas fa-chevron-right\"></i></button>\r\n                </div>\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport './Task.css';\r\n\r\nconst Task = () => {\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"title\">\r\n                <h2 className=\"section-title\">Підтвердження рівня знань</h2>\r\n                <h3 className=\"section-info\">Оберіть мову програмування або фреймворк та рівень знань.</h3>\r\n                <p className=\"section-description\">Вам буде запропоновано 30 питань. Час проходження тесту обмежено. Не зачиняйте вкладку браузеру, інакше прогрес буде втрачено. Чергова спроба з'явиться не раніше ніж через 4 тижні.</p>\r\n            </div>\r\n            <div className=\"container-button\">\r\n                <div className=\"container-lang\">\r\n                    <p className=\"btn-text\">Мова програмування / фреймворк:</p>\r\n                    <select name=\"lang\">\r\n                        <option value=\"PHP\" className=\"btn\">PHP</option>\r\n                        <option value=\"HTML_CSS\" className=\"btn\">HTML5, CSS3</option>\r\n                        <option value=\"JS\" className=\"btn\">JS</option>\r\n                        <option value=\"REACT\" className=\"btn\">React</option>\r\n                        <option value=\"Angular\" className=\"btn\">Angular</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"container-prof\">\r\n                    <p className=\"btn-text\">Рівень знань:</p>\r\n                    <select name=\"level\">\r\n                        <option value=\"Jun\" className=\"btn\">Junior</option>\r\n                        <option value=\"Mid\" className=\"btn\">Middle</option>\r\n                        <option value=\"Sen\" className=\"btn\">Senior</option>\r\n                        <option value=\"Lead\" className=\"btn\" id=\"123\">Lead</option>\r\n                    </select>\r\n                    <a href=\"index_t.html\" className=\"link\">\r\n                        <button className=\"btn-submit\" onClick={()=> { alert('Вам доведеться найняти команду, щоб цей функціонал запрацював =)') }}>Почати</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, {useState} from 'react';\r\nimport './Tester.css';\r\nimport Quiz from '../Quiz/Quiz';\r\nimport Task from '../Task/Task';\r\n\r\nconst Tester = () => {\r\n\r\n    const testCases = [\r\n        {\r\n            question: 'Питання 1',\r\n            group: 'Topic 1',\r\n            rightAnswer: 'Вірна відповідь на питання 1',\r\n            wrongAnswer1: 'Невірна відповідь 1 на питання 1',\r\n            wrongAnswer2: 'Невірна відповідь 2 на питання 1',\r\n            wrongAnswer3: 'Невірна відповідь 3 на питання 1',\r\n        },\r\n        {\r\n            question: 'Питання 2',\r\n            group: 'Topic 1',\r\n            rightAnswer: 'Вірна відповідь на питання 2',\r\n            wrongAnswer1: 'Невірна відповідь 1 на питання 2',\r\n            wrongAnswer2: 'Невірна відповідь 2 на питання 2',\r\n            wrongAnswer3: 'Невірна відповідь 3 на питання 2',\r\n        },\r\n        {\r\n            question: 'Питання 3',\r\n            group: 'Topic 1',\r\n            rightAnswer: 'Вірна відповідь на питання 3',\r\n            wrongAnswer1: 'Невірна відповідь 1 на питання 3',\r\n            wrongAnswer2: 'Невірна відповідь 2 на питання 3',\r\n            wrongAnswer3: 'Невірна відповідь 3 на питання 3',\r\n        },\r\n        {\r\n            question: 'Питання 4',\r\n            group: 'Topic 2',\r\n            rightAnswer: 'Вірна відповідь на питання 4',\r\n            wrongAnswer1: 'Невірна відповідь 1 на питання 4',\r\n            wrongAnswer2: 'Невірна відповідь 2 на питання 4',\r\n            wrongAnswer3: 'Невірна відповідь 3 на питання 4',\r\n        },\r\n        {\r\n            question: 'Питання 5',\r\n            group: 'Topic 2',\r\n            rightAnswer: 'Вірна відповідь на питання 5',\r\n            wrongAnswer1: 'Невірна відповідь 1 на питання 5',\r\n            wrongAnswer2: 'Невірна відповідь 2 на питання 5',\r\n            wrongAnswer3: 'Невірна відповідь 3 на питання 5',\r\n        },\r\n    ];\r\n\r\n    const mixArray = arr => {\r\n        let newArr = arr.slice();\r\n        for (let i = 0; i < newArr.length; i++) {\r\n            let temp = newArr[i];\r\n            let randomIndex = Math.floor(Math.random() * newArr.length);\r\n            newArr[i] = newArr[randomIndex];\r\n            newArr[randomIndex] = temp;\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    const tests = mixArray(testCases.reduce((acc, el) => {\r\n        acc.push({question: el.question, topic: el.group, answers: mixArray([el.rightAnswer, el.wrongAnswer1, el.wrongAnswer2, el.wrongAnswer3])});\r\n        return acc;\r\n    }, []));\r\n\r\n    const [testInProgress, setTestInProgress] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !testInProgress ?\r\n                    <Task /> :  \r\n                    <Quiz testCases={testCases} tests={tests} />\r\n            }\r\n            <button onClick={() => setTestInProgress(true)}>Робоча кнопка</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Tester;","import React from 'react';\r\nimport './App.css';\r\nimport Profile from './components/Profile/Profile';\r\nimport Tester from './components/Tester/Tester';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"nav-bar\">\r\n          <a className=\"logo\" href=\"https://bazait.com\" title=\"BazaIT\"><img src={ require(\"./assets/BazaIT.svg\") } alt=\"BazaIT logo\"/></a>\r\n          <nav>\r\n            <ul>\r\n              <li>Компанії</li>\r\n              <li className=\"active\">Вакансії</li>\r\n              <li>Новини</li>\r\n            </ul>\r\n          </nav>\r\n          <button><span></span>UserName</button>\r\n        </div>\r\n      </header>\r\n      <Profile />\r\n      <Tester />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}